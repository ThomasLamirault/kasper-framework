// ============================================================================ //                 KASPER - Kasper is the treasure keeper
//    www.viadeo.com - mobile.viadeo.com - api.viadeo.com - dev.viadeo.com
//            Viadeo Framework for effective CQRS/DDD architecture
// ============================================================================
ext.gradleDir = "${rootProject.rootDir}/gradle"

ext.nexusCredentials = {
    username nexus_username
    password nexus_password
}

wrapper.gradleVersion = '3.4.1'

configure(allprojects) {
    apply plugin: 'idea'
    apply plugin: 'maven'
}

configure(rootProject) {
    idea.project {
        languageLevel = 'JDK_1_7'
        ipr {
            withXml { provider ->
                provider.node.component
                    .find { it.@name == 'VcsDirectoryMappings' }
                    .mapping.@vcs = 'Git'
            }
        }
    }
}

configure(subprojects) {
    apply plugin: 'java'
    apply from: "${rootProject.rootDir}/libraries.gradle"

    group = 'com.viadeo.kasper'
    version = '1.5.2'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    configure([compileJava, compileTestJava]) {
        options.encoding = 'UTF-8'
        options.warnings = false
    }

    configurations {
        all*.exclude module: 'slf4j-log4j12'
        all*.exclude module: 'slf4j-jcl'
        all*.exclude module: 'slf4j-jdk14'
        all*.exclude module: 'log4j'
        deployerJars
    }

    repositories {
        mavenLocal()

        // Maven Central is first to be the default repository (ordering is important)
        mavenCentral()

        // Viadeo Nexus
        // Variables must be present in the 'gradle.properties' file
        maven {
            url "https://${nexus_host}/content/groups/all_repositories"
            credentials nexusCredentials
        }
    }

    test {
        // Ensure we don't write where the task 'test' already writes
        def junitXmlDestination = System.getenv("CIRCLE_TEST_REPORTS") ?: "${rootProject.buildDir}"
        reports {
            junitXml.destination = "${junitXmlDestination}/test-results"
        }
    }

    // Adding javadoc and sources jars, it is really nice to have! --------------
    // custom tasks for creating source jar
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

	javadoc {
		failOnError = false
	}

    // custom tasks for creating javadoc jar
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    // add the jars as artifacts
    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    jar {
        manifest {
            attributes(
                    "Manifest-Version"    : "1.0",
                    "Kasper-Version"    : version
            )
        }
    }

    // -----------------------------------------------------------------------------------------------------------------

    uploadArchives {
        repositories.mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "https://${nexus_host}/content/repositories/kasper-releases") {
                authentication(userName: nexus_username, password: nexus_password)
            }
            snapshotRepository(url: "https://${nexus_host}/content/repositories/kasper-snapshots") {
                authentication(userName: nexus_username, password: nexus_password)
            }
        }
    }
}

task alljavadoc(type: Javadoc) {
    source rootProject.subprojects.collect { project -> project.sourceSets.main.allJava }
    classpath = files(rootProject.subprojects.collect { project -> project.sourceSets.main.compileClasspath })
    destinationDir = file('build/javadoc')
}

apply from: "${gradleDir}/circleci.gradle"

